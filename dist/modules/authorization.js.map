{"version":3,"sources":["../../modules/authorization.js"],"names":["basicAuth","login","create_user","delete_user","accept_user","validate_email","reset_password","logger","bcrypt","formidable","restify","cookie","aux","saltRounds","req","res","next","header","user_object","headers","hasOwnProperty","JSON","parse","decodeURIComponent","currentUser","performFindOne","username","then","user","active","verified_email","log","connection","remoteAddress","error","errors","NotFoundError","send","catch","authorization","basic","passwd","password","compare","pw","err","authorized","UnauthorizedError","BadRequestError","data","on","chunk","form","IncomingForm","fields","hash","validation_buffer","name","email","validation_string","toString","registration_date","Date","surname","performInsertOne","result","validate_link","host","router","render","message","from","cc","process","env","dev_email","to","subject","text","send_message","InternalServerError","performRemove","_id","to_objectid","params","user_id","ok","filter_object","ConflictError","performFindOneAndModify","$set","date","new_validation_buffer","verified","accept_link","sender"],"mappings":"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","file":"authorization.js","sourcesContent":["/**\n * Created by francesco on 11/04/17.\n */\n\nimport * as logger from 'winston';\nimport * as bcrypt from 'bcrypt';\nimport * as formidable from 'formidable';\nimport * as restify from 'restify';\nimport * as cookie from 'cookie';\nimport {randomBytes as randomBytes} from 'crypto';\n\nimport {db} from './database';\nimport {server as Server} from './server';\nimport * as aux from './aux';\n\nconst saltRounds = 10;\n\nexport function basicAuth(req, res, next) {\n\n  res.header('WWW-Authenticate', 'Basic realm=\"VHLdb\"');\n\n  let user_object;\n  if (req.headers.hasOwnProperty('cookie')) {\n    user_object = JSON.parse(cookie.parse(decodeURIComponent(req.headers.cookie)).user_object || '{}');\n    user_object = user_object.currentUser;\n  }\n\n  if (user_object && user_object.hasOwnProperty('username')) {\n\n    db.performFindOne({username: user_object.username}, {}, 'users').then((user) => {\n      if (user && user.active && user.verified_email) {\n        logger.log('info', 'checkUser | %s | Cookie session detected. %s request OK.', req.connection.remoteAddress, user.username);\n        req.user = user;\n        return next()\n\n      } else {\n        let error = new restify.errors.NotFoundError('Invalid credentials.');\n        res.send(error);\n        return next(error);\n      }\n    }).catch(() => {\n      let error = new restify.errors.NotFoundError('Could not fetch user.');\n      res.send(error);\n      return next(error);\n    })\n\n  } else if (req.headers.hasOwnProperty('authorization')) {\n\n    const username = req.authorization.basic.username;\n    const passwd = req.authorization.basic.password;\n\n    db.performFindOne({username: username}, {}, 'users').then(function (user) {\n\n      if (!user) {\n        let error = new restify.errors.NotFoundError('User not found.');\n        res.send(error);\n        return next(error);\n\n      } else if (user.active && user.verified_email) {\n        bcrypt.compare(passwd, user.pw, (err, authorized) => {\n          if (err || !authorized) {\n            logger.log('info', 'checkUser | %s | unauthorized request', req.connection.remoteAddress);\n            if (err) {\n              logger.log('error', 'checkUser | %s | %s', req.connection.remoteAddress, err);\n            }\n            res.send(401);\n            return next(false);\n          } else {\n            logger.log('info', 'checkUser | %s | %s request. OK.', req.connection.remoteAddress, user.username);\n            delete user.pw;\n            req.user = user;\n            return next()\n          }\n        })\n\n      } else if (!user.active && user.verified_email) {\n        let error = new restify.errors.UnauthorizedError('This account need to be activated.');\n        res.send(error);\n        return next(error)\n\n      } else {\n        let error = new restify.errors.UnauthorizedError('The email address associated with this address needs verification. Check your inbox.');\n        res.send(error);\n        return next(error)\n      }\n    });\n  } else {\n    let error = new restify.errors.BadRequestError('This route requires authorization.');\n    res.send(error);\n    return next(error)\n  }\n}\n\nexport function login(req, res, next) {\n  let data = '';\n  req.on('data', (chunk) => {\n    data += chunk;\n  });\n\n  req.on('end', () => {\n    res.send(204);\n    return next()\n  });\n\n  req.on('error', () => {\n    res.send(400);\n  })\n}\n\nexport function create_user(req, res, next) {\n\n  /**\n   * fields:\n   *  -   user        -> username\n   *  -   password    -> user secret password\n   *  -   name        -> first name\n   *  -   surname     -> surname\n   *  -   email       -> email address\n   */\n\n  const form = new formidable.IncomingForm();\n\n  form.parse(req, (err, fields) => {\n    if (!fields.hasOwnProperty('user') || !fields.hasOwnProperty('email') || !fields.hasOwnProperty('password')) {\n      res.send(400)\n    }\n\n    if (fields.hasOwnProperty('password')) {\n\n      bcrypt.hash(fields.password, saltRounds, (err, hash) => {\n        randomBytes(48, (err, validation_buffer) => {\n\n          let user_object = {\n            name: fields.name,\n            username: fields.user,\n            pw: hash,\n            email: fields.email,\n            active: false,\n            verified_email: false,\n            validation_string: validation_buffer.toString('hex'),\n            registration_date: new Date()\n          };\n          if (typeof fields.surname != 'undefined') {\n            user_object.surname = fields.surname;\n          }\n\n          db.performInsertOne(user_object, 'users').then((result) => {\n\n            const validate_link = 'http://' + req.headers.host + '/ws' + Server.router.render('validate_email', {validation_string: validation_buffer.toString('hex')});\n\n            const message = {\n              from: \"biocomp@bio.unipd.it\",\n              cc: process.env.dev_email,\n              to: fields.email,\n              subject: \"[VHLdb] Validate your email address\",\n              text: `Click here to validate your email address: ${validate_link}`\n            };\n\n            aux.send_message(message);\n\n            res.send(201, result);\n            return next();\n\n          }, (error) => {\n            logger.log('error', 'create_user | %s | %s', req.connection.remoteAddress, error);\n            res.send(new restify.errors.InternalServerError(error));\n            return next(error);\n          })\n        })\n      })\n\n\n    } else {\n\n      let error = new restify.errors.BadRequestError('Could not detect password.');\n      logger.log('error', 'create_user | %s | %s', req.connection.remoteAddress, error);\n      res.send(error);\n      return next(error);\n\n    }\n  });\n}\n\nexport function delete_user(req, res, next) {\n\n  db.performRemove({_id: aux.to_objectid(req.params.user_id)}, 'users').then((result) => {\n    if (result.ok) {\n      res.send(200);\n      return next();\n    } else {\n\n      let error = restify.errors.InternalServerError(`Could not remove user ${req.params.user_id}`);\n      res.send(error);\n      return next(error);\n    }\n  }, (error) => {\n    res.send(500);\n    logger.log('error', '%s | %s', req.connection.remoteAddress, error)\n  })\n\n}\n\nexport function accept_user(req, res, next) {\n\n  let filter_object = {_id: aux.to_objectid(req.params.user_id)};\n  let error;\n\n  // check if user is already active\n  db.performFindOne(filter_object, {active: 1}, 'users').then((user) => {\n\n    if (!user) {\n      error = new restify.errors.NotFoundError('Could not find the requested link.');\n      res.send(error);\n      return next(error);\n    }\n\n    if (user.active) {\n      error = new restify.errors.ConflictError('user is already active.');\n      res.send(error);\n      return next(error)\n    }\n\n    // if not active activate it\n    db.performFindOneAndModify(filter_object, {\n      $set: {\n        active: {\n          active: true,\n          date: new Date()\n        }\n      }\n    }, 'users').then((user) => {\n\n      logger.log('info', 'accept_user | %s | user %s accepted.', req.connection.remoteAddress, user.username);\n      res.send(200, {'message': `${user.username} is now active.`});\n      return next()\n\n    }, (error) => {\n\n      logger.log('error', 'accept_user | %s | %s', req.connection.remoteAddress, error);\n      res.send(500);\n      return next(error)\n\n    })\n\n  }, (error) => {\n\n    logger.log('error', 'accept_user | %s | %s', req.connection.remoteAddress, error);\n    res.send(500);\n    return next(error)\n\n  });\n\n}\n\nexport function validate_email(req, res, next) {\n  let error;\n\n  randomBytes(48, (err, new_validation_buffer) => {\n\n    if (err) {\n      error = restify.errors.InternalServerError(err);\n      logger.log('error', '%s | %s', req.connection.remoteAddress, error);\n      res.send(error);\n      return next(error);\n    }\n\n    db.performFindOneAndModify({validation_string: req.params.validation_string}, {\n      $set: {\n        verified_email: {verified: true, date: new Date()},\n        validation_string: new_validation_buffer.toString('hex')\n      }\n    }, 'users').then((user) => {\n\n      if (user) {\n        const name = user.hasOwnProperty('surname') ? user.name + ' ' + user.surname : user.name;\n        const accept_link = 'http://' + req.headers.host + '/ws' + Server.router.render('accept_registration', {user_id: user._id});\n        const sender = `New registration request from ${user.name} (${user.email}).`;\n        const message = {\n          from: \"biocomp@bio.unipd.it\",\n          to: \"biocomp@bio.unipd.it\",\n          cc: process.env.dev_email,\n          subject: `[VHLdb] Registration request from ${name}`,\n          text: sender + `\\n\\nClick here to accept the registration: ${accept_link}\\n\\n\\nCheers,\\nVHLdb dev team`\n        };\n\n        aux.send_message(message);\n        res.send(200, {message: 'email verified'});\n        return next();\n\n      } else {\n        error = new restify.errors.NotFoundError('Could not find the requested link.');\n        res.send(error);\n        return next(error)\n      }\n\n    }, (error) => {\n\n      error = restify.errors.InternalServerError('Error while validating email.');\n      logger.log('error', '%s | %s', req.connection.remoteAddress, error);\n      res.send(error);\n      return next(error);\n\n    })\n  })\n}\n\nexport function reset_password(req, res, next) {\n  // codeme: reset_password\n}"]}